# Generated by Django 3.1.2 on 2020-11-20 15:21

import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Building',
            fields=[
                ('buildingcode', models.CharField(db_column='BuildingCode', max_length=10, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'building',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FirstSubjectkeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword_id', models.IntegerField()),
                ('keyword', models.TextField()),
            ],
            options={
                'db_table': 'first_subjectkeyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FirstUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('userid', models.TextField()),
                ('username', models.TextField()),
                ('user_number', models.TextField()),
            ],
            options={
                'db_table': 'first_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FirstUserkeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('keyword_id', models.IntegerField()),
                ('keyword', models.TextField()),
                ('flag', models.IntegerField()),
            ],
            options={
                'db_table': 'first_userkeyword',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Kiosk',
            fields=[
                ('kioskcode', models.IntegerField(db_column='KioskCode', primary_key=True, serialize=False)),
                ('time', models.DateTimeField(db_column='Time')),
                ('entertime', models.TimeField(db_column='EnterTime')),
            ],
            options={
                'db_table': 'kiosk',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.IntegerField(db_column='ID', primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='Name', max_length=10)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=30, null=True)),
                ('phone', models.CharField(db_column='Phone', max_length=1)),
            ],
            options={
                'db_table': 'person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SubjectKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keyword_id', models.IntegerField()),
                ('keyword', models.TextField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('userid', models.TextField(max_length=20)),
                ('username', models.TextField(max_length=20)),
                ('user_number', models.TextField(max_length=10)),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserKeyword',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.IntegerField()),
                ('keyword_id', models.IntegerField()),
                ('keyword', models.TextField(max_length=10)),
                ('flag', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Kstate',
            fields=[
                ('kcode', models.OneToOneField(db_column='KCode', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='first.kiosk')),
                ('inspectorcode', models.IntegerField(db_column='InspectorCode')),
                ('inspectdate', models.DateField(db_column='InspectDate')),
            ],
            options={
                'db_table': 'kstate',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('stateid', models.IntegerField(db_column='StateID')),
                ('id', models.OneToOneField(db_column='ID', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='first.person')),
                ('infoagree', models.IntegerField(db_column='InfoAgree')),
                ('temperature', models.FloatField(db_column='Temperature')),
                ('breathingsymptoms', models.IntegerField(db_column='BreathingSymptoms')),
                ('abnormaltemperature', models.IntegerField(blank=True, db_column='AbnormalTemperature', null=True)),
            ],
            options={
                'db_table': 'state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Statics',
            fields=[
                ('kcode', models.OneToOneField(db_column='KCode', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='first.kiosk')),
                ('day', models.DateField(db_column='Day')),
                ('e87enter', models.IntegerField(db_column='E87enter')),
                ('s41enter', models.IntegerField(db_column='S41enter')),
                ('e87confirm', models.IntegerField(db_column='E87confirm')),
                ('s41confirm', models.IntegerField(db_column='S41confirm')),
            ],
            options={
                'db_table': 'statics',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Calculate',
            fields=[
                ('kcode', models.OneToOneField(db_column='KCode', on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='first.statics')),
            ],
            options={
                'db_table': 'calculate',
                'managed': False,
            },
        ),
    ]
